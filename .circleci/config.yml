defaults: &defaults
  working_directory: ~/front-config

parameters:
  nodejs_base_image:
    type: string
    default: 'cimg/node:18.12.0'
  cache_version:
    type: string
    default: v20

restore_repo: &restore_repo
  restore_cache:
    keys:
      - << pipeline.parameters.cache_version >>-source-{{ .Branch }}-{{ .Revision }}

version: 2.1

orbs:
  aws-s3: circleci/aws-s3@2.0.0

jobs:
  checkout:
    <<: *defaults
    docker:
      - image: << pipeline.parameters.nodejs_base_image >>
    steps:
      - *restore_repo
      - checkout
      - restore_cache:
          key: << pipeline.parameters.cache_version >>-yarn-{{ checksum "yarn.lock" }}
      - run:
          name: install dependencies
          command: yarn
      - save_cache:
          key: << pipeline.parameters.cache_version >>-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - save_cache:
          key: << pipeline.parameters.cache_version >>-source-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/front-config

  test:
    <<: *defaults
    docker:
      - image: cimg/node:20.11.0
        environment:
          NODE_ENV: test
    steps:
      - *restore_repo
      - run: yarn lint
      - run: yarn check:audit
      - run: yarn test:coverage
      - run: yarn test:coverage:group
      - persist_to_workspace:
          root: ~/front-config
          paths:
            - coverage

  coverage:
    docker:
      - image: 924484830305.dkr.ecr.eu-west-1.amazonaws.com/coverage:main-latest
        environment:
          AWS_S3_BUCKET: welcome-releases
          AWS_S3_FOLDER: data/coverage
          # Even though we use `vitest` for the tests, we need to specify `jest` because we group the thresholds
          COVERAGE_PARSER: jest
          KEEP_UNTOUCHED_FILES: 'true'
          COVERAGE_VARIATION_THRESHOLD: 0.05
    steps:
      - attach_workspace:
          at: /tmp
      - run:
          name: Upload coverage and comment PR
          command: /app/bin/coverage eval 'Coverage.run("/tmp/coverage/coverage-grouped.json")'

  release:
    <<: *defaults
    docker:
      - image: << pipeline.parameters.nodejs_base_image >>
        environment:
          NODE_ENV: production
    steps:
      - *restore_repo
      - attach_workspace:
          at: ~/front-config
      - run:
          name: Publish to NPM
          command: |
            npm set //registry.npmjs.org/:_authToken=$NPM_TOKEN
            npm publish

workflows:
  btd:
    jobs:
      - checkout:
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - test:
          requires:
            - checkout
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - coverage:
          context:
            - aws
            - coverage
          requires:
            - test
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - release:
          context:
            - wttj-config
          requires:
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
