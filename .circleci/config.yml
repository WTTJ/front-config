defaults: &defaults
  working_directory: ~/front-config

parameters:
  nodejs_base_image:
    type: string
    default: 'cimg/node:16.18.1'
  cache_version:
    type: string
    default: v20

restore_repo: &restore_repo
  restore_cache:
    keys:
      - << pipeline.parameters.cache_version >>-source-{{ .Branch }}-{{ .Revision }}

version: 2.1

orbs:
  aws-s3: circleci/aws-s3@2.0.0

jobs:
  checkout:
    <<: *defaults
    docker:
      - image: << pipeline.parameters.nodejs_base_image >>
    steps:
      - *restore_repo
      - checkout
      - restore_cache:
          key: << pipeline.parameters.cache_version >>-yarn-{{ checksum "yarn.lock" }}
      - run:
          name: install dependencies
          command: yarn
      - save_cache:
          key: << pipeline.parameters.cache_version >>-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - save_cache:
          key: << pipeline.parameters.cache_version >>-source-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/front-config

  vulnerabilities_yarn:
    <<: *defaults
    docker:
      - image: << pipeline.parameters.nodejs_base_image >>
    steps:
      - *restore_repo
      - run:
          name: Critical vulnerabilities test (yarn audit)
          command: yarn check:audit

  lint:
    <<: *defaults
    docker:
      - image: << pipeline.parameters.nodejs_base_image >>
        environment:
          NODE_ENV: test
    steps:
      - *restore_repo
      - run:
          name: linter
          command: yarn lint

  release:
    <<: *defaults
    docker:
      - image: << pipeline.parameters.nodejs_base_image >>
        environment:
          NODE_ENV: production
    steps:
      - *restore_repo
      - attach_workspace:
          at: ~/front-config
      - run:
          name: Publish to NPM
          command: |
            npm set //registry.npmjs.org/:_authToken=$NPM_TOKEN
            npm publish

workflows:
  btd:
    jobs:
      - checkout:
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - vulnerabilities_yarn:
          requires:
            - checkout
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - lint:
          requires:
            - vulnerabilities_yarn
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - release:
          contexts:
            - wttj-config
          requires:
            - vulnerabilities_yarn
            - lint
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
